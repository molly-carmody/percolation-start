Name: Molly Carmody
NetID: mkc35
Hours Spent: 9.3
Consulted With: Kayla Derman, Jacqui Levitan, Kelly McLaughlin, Professor Forbes
Resources Used: NONE 
Impressions: I found the assignment interesting, especially sinced it invovled visuals. However, the directions
were extremely vague and difficult to follow. I think it would have been helpful if more details were provided, without
necessarily giving away what to write. 
----------------------------------------------------------------------
Run PercolationStats to gather timings for: N=20, T=20
	PercolationDFS: 0.062 secs
	PercolationUF with QuickFind: 0.018 secs
	PercolationUF with QuickUWPC: 0.009 secs

Problem 1: How does doubling N affect the running time?
		N=40, T=20
	PercolationDFS: 0.168 secs
	PercolationUF with QuickFind: 0.060 secs
	PercolationUF with QuickUWPC: 0.016 secs
Doubling N increases the run time for each of the Percolation types. For PercolationDFS, the run time 
approximately doubled, for Percolation UF with QuickFind runtime approximately quadrupled, and for PercolationUF
with QuickUWPC the runtime approximately doubled. 

Problem 2: How does doubling T affect the running time?
		N=20, T=40
	PercolationDFS: 0.061 secs
	PercolationUF with QuickFind: 0.020 secs
	PercolationUF with QuickUWPC: 0.013 secs
Comparing the run times with those from Problem 3, where T is not doubled, it is shown that there is not a significant 
impact on runtime when you double the T. The values are slightly higher/different, but not great enough
for there to be an apparent effect of doubling T. 

Problem 3: Measure running time (using calls to System.currentTimeMillis)
of the three versions of your program (DFS, Quick Find, and weighted quick
union with path compression).
		N=20, T=20
	3A DFS:: 0.062 secs
	3B Quick Find: 0.018 secs
	3B Quick Find: 0.009 secs

Problem 4: Give a formula (using Big-Oh notation) of the running time on your computer (in seconds) as a function of both N and T.
	PercolationDFS: O(T*N^2)
	PercolationUF with QuickFind: O(T*N)
	PercolationUF with QuickUWPC: O(N + TlogN)

Problem 5: Estimate the largest experiment you could  perform in one
[minute, day, year] assuming your computer has enough memory.
5A 1 minute:
5B 1 day:
5C 1 year:

Problem 6: Give a formula (using Big-Oh notation) that describes the amount
of memory (in bytes) that your IPercolate implementation consumes as a function of N.
6A DFS: 
6B Quick Find:
6C Weighted quick union with path compression:
